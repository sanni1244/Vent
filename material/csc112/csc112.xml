<div class="none">
<br/><br/><br/><br/>
<center><h2>CSC 112 Short Note</h2></center>
<h3>STRUCTURED COMPUTER ORGANIZATION</h3>
<span class="none">
A digital computer is a machine that can solve problems for people by carrying out instructions given to it. A sequence of instructions describing how to perform a certain task is called a program.
Together, a computer’s primitive instructions form a language in which people can communicate with the computer. Such a language is called a machine
language. The people designing a new computer must decide what instructions to
include in its machine language. Usually, they try to make the primitive instructions as simple as possible, consistent with the computer’s intended use and performance requirements, in order to reduce the complexity and cost of the electronics needed. Because most machine languages are so simple, it is difficult and
tedious for people to use them.
This simple observation has, over the course of time, led to a way of structuring computers as a series of abstractions, each abstraction building on the one below it. In this way, the complexity can be mastered and computer systems can
be designed in a systematic, organized way. We call this approach structured
computer organization and have named the book after it. In the next section we
will describe what we mean by this term. <br/> After that we will look at some historical developments, the state-of-the-art, and some important examples.

<br/><br/>
<b>Computer architecture</b> refers to those attributes of a system visible to a programmer or, put another way, those attributes that have a direct impact on the
logical execution of a program. A term that is often used interchangeably with computer architecture is <b>instruction set architecture (ISA)</b>. The ISA defines instruction
formats, instruction opcodes, registers, instruction and data memory; the effect of
executed instructions on the registers and memory; and an algorithm for controlling instruction execution. Computer organization refers to the operational units
and their interconnections that realize the architectural specifications. Examples of
architectural attributes include the instruction set, the number of bits used to represent various data types (e.g., numbers, characters), I/O mechanisms, and techniques
for addressing memory. Organizational attributes include those hardware details
transparent to the programmer, such as control signals; interfaces between the computer and peripherals; and the memory technology used.

</span>

<h1>Note 2</h1>
<p>Principles of Computer Organization is a branch of computer science that deals with the internal structure and operation of computers. It covers a wide range of topics including the architecture of computer systems, the design of computer components, and the organization of data and information. Understanding the principles of computer organization is essential for designing and building efficient and effective computer systems.</p><br/>
<p>One of the core concepts in computer organization is the Von Neumann architecture. This architecture is the foundation for most modern computers and is based on the idea of a central processing unit (CPU) and a memory system. The CPU is responsible for executing instructions, while the memory system is used for storing data and instructions. This architecture is known for its ability to store and execute instructions in a linear sequence, making it a simple and efficient design.</p><br/>
<p>Another important concept in computer organization is the instruction set architecture (ISA). This defines the set of instructions and commands that a computer can execute. It includes the data types, operations, and addressing modes that are supported by the computer. Understanding the ISA is essential for designing and writing software that can run on a specific computer system.</p><br/>
<p>Computer organization also deals with the design and organization of memory systems. Memory is an essential component of computer systems, and it comes in many different forms, including RAM, ROM, and flash memory. Memory is organized in a hierarchical manner, with different levels of memory providing different levels of access speed and capacity. Understanding how memory is organized and how it can be used effectively is crucial for creating efficient software and systems.</p><br/>
<p>Another important aspect of computer organization is the design and organization of input/output systems. Input/output (I/O) systems are responsible for getting data into and out of a computer. They include devices such as keyboards, mice, and display monitors. I/O systems are connected to the CPU through a system bus, which is responsible for transmitting data and instructions between the different components of a computer. Understanding the design and organization of I/O systems is essential for creating efficient and effective software and systems.</p><br/>
<p>Computer organization also deals with the organization and management of data. Data can be stored in a variety of formats and structures, such as arrays, linked lists, and trees. Understanding how to organize and manage data effectively is essential for creating efficient and effective software and systems.</p><br/>
<p>computer organization also covers the principles of parallel computing. Parallel computing is the use of multiple processors or cores to perform computations simultaneously. This can significantly increase the speed and performance of computer systems, and is essential for many high-performance applications such as scientific simulations and data analysis. Understanding the principles of parallel computing is crucial for designing and building efficient and effective computer systems.</p><br/>
<p>principles of computer organization is a key area of computer science that deals with the internal structure and operation of computers. It covers a wide range of topics including the architecture of computer systems, the design of computer components, and the organization of data and information. Understanding the principles of computer organization is essential for designing and building efficient and effective computer systems that can perform a wide range of tasks. It is also important for software developers to understand these principles as it will help them to write efficient and effective code.</p><br/>
<p></p><br/>




</div>